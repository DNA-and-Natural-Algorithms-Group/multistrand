# Multistrand nucleic acid kinetic simulator
# Copyright (c) 2008-2023 California Institute of Technology. All rights reserved.
# The Multistrand Team (help@multistrand.org)

Bootstrap: docker
From: bitnami/minideb:bullseye

%help

    This Apptainer container definition installs NUPACK 4.0.1 [1] and a debug
    build of Multistrand 2.2 [2], assuming that both source trees are available
    on the host system (see %files section). It uses GCC 10, GDB 13.2 and a
    debug build of Python 3.11, and requires Apptainer 1.2+ to build. For a
    tutorial on using GDB for the Python runtime and its C extensions, see [3].

    [1] https://www.nupack.org/
    [2] https://github.com/DNA-and-Natural-Algorithms-Group/multistrand
    [3] https://willayd.com/fundamental-python-debugging-part-2-python-extensions.html

%arguments

    # version config
    NUPACK_VER=4.0.1.8
    CPY_VER=3.11
    CPY_TAG=v{{CPY_VER}}.4
    GDB_VER=13.2

    # compiler config
    NJOBS=12

%files

    # copy source trees
    ../../nupack-{{NUPACK_VER}}.zip /dna/
    ../../multistrand /dna/

%environment

    # bin paths
    export PATH=/usr/local/bin:${PATH}

    # lib paths
    export MS=/dna/multistrand

    # compiler config
    export CC=/usr/bin/gcc CXX=/usr/bin/g++

%post

    # bin paths
    export PATH=/usr/local/bin:${PATH}

    # build paths
    export BLD_ROOT=/build
    export GDB_TAR=gdb-{{GDB_VER}}.tar.gz GDB_SRC=${BLD_ROOT}/gdb-{{GDB_VER}}
    export GDB_DATA=/usr/local/share/gdb
    export CPY_SRC=${BLD_ROOT}/cpython

    # lib paths
    export LIB_ROOT=/dna
    export NUPACK_SRC=${LIB_ROOT}/nupack-{{NUPACK_VER}}
    export NUPACK_ZIP=${NUPACK_SRC}.zip
    export MS=${LIB_ROOT}/multistrand

    # compiler config
    export CC=/usr/bin/gcc CXX=/usr/bin/g++

    # install common system utils
    # (`install_packages` wrapper for APT provided by Bitnami base image)
    install_packages \
        sudo ca-certificates build-essential wget unzip tar git \
        tmux time less tree vim nano

    # info
    echo "\n\n\n" && ${CC} --version && ${CXX} --version

    # install Valgrind
    echo "\n\n\n" && install_packages valgrind

    # install Python from source, configured with PDB
    install_packages \
        libbz2-dev libffi-dev libssl-dev zlib1g-dev liblzma-dev \
        libsqlite3-dev libreadline-dev libgmp-dev
    echo "\n\n\n" && git clone -b {{CPY_TAG}} --depth 1 \
        https://github.com/python/cpython.git ${CPY_SRC} && cd ${CPY_SRC} && \
        ./configure --with-pydebug --without-pymalloc --with-valgrind && \
        CFLAGS='-g3' make -s -j{{NJOBS}} && sudo make install

    # configure Valgrind
    sudo cp ${CPY_SRC}/Misc/valgrind-python.supp ${MS}/valgrind-python-to-edit.supp
    bash ${MS}/tools/uncomment.sh

    # info
    echo "\n\n\n" && pip3 debug

    # install GDB from source, configured with Python
    echo "\n\n\n" && cd ${BLD_ROOT} && wget --wait=10 \
        https://ftp.gnu.org/gnu/gdb/${GDB_TAR} && tar -xzf ${GDB_TAR} && \
        cd ${GDB_SRC} && ./configure --with-python=python{{CPY_VER}} && \
        make -s -j{{NJOBS}} && sudo make install
    # auto-import Python intrinsics in Gdb
    sudo cp ${CPY_SRC}/Tools/gdb/libpython.py ${GDB_DATA}/python/gdb/function

    # install common Python utils
    pip3 install ipython

    # install NUPACK
    echo "\n\n\n" && cd ${LIB_ROOT} && unzip -q ${NUPACK_ZIP} && \
         pip3 install -U nupack -f ${NUPACK_SRC}/package

    # install Multistrand, configured with debugging compiler flags
    echo "\n\n\n" && cd ${MS}
    rm -rfv .git tools build *.egg-info *.log *_cache p_statespace
    find . -type f -regex ".*\.so" -print | xargs rm -v
    sed --in-place "s/^\(debug = \)\w*$/\1True/" setup.py
    pip3 install -v -e .[testing,tutorials]

    # info
    echo "\n\n\n" && pip3 list

    # cleanup
    echo "\n\n\n" && rm -r \
         ${CPY_SRC} ${BLD_ROOT}/${GDB_TAR} ${GDB_SRC} ${NUPACK_ZIP} ${NUPACK_SRC}
    pip3 cache purge

%labels

    Author Boyan Beronov, Jordan Lovrod, Chenwei Zhang, Jake Kaslewicz
