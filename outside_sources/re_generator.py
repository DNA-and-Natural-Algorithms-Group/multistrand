from util_regexp import *
NRE = NamedRE_Dict

trajectory = NamedRE( [ ('state_line', ['state_static', 'whitespace', 'choice', 'time'])])
trajectory.add( 'whitespace', r'\s*')
trajectory.add( 'state_static', [False,r'^Current State: Choice:'])
trajectory.add( 'state_static', [False,r'Current State: Choice:'])
trajectory.add( 'choice', [True,'float'])
trajectory.add( 'time', [True,'float'])
trajectory.add('state_line', ['state_static', 'whitespace', 'choice', 'time_static', 'time'])
trajectory.add('time_static',r"[^:]*:\s*")
trajectory.add('float',r"[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?")
trajectory.add('complex',[False, 'static_complex', 'complex_id', 'strandlist', 'complex_newline', 'sequence', 'complex_newline', 'structure', 'complex_newline', 'complex_energyline'])
trajectory.add('complex_newline',[False, r'\s*', r'\n', r'[^:]*:\s*'])
trajectory.add('static_complex',r'Complex ')
trajectory.add('c_id',(NRE.NamedGroup,'pos_int'))
trajectory.add('pos_int','[+]?[0-9]+')
trajectory.add('complex_id',[r'c_id',r':'])
trajectory.add('strand',[False,r'[,]?\s*','pos_int',r':','identifier'])
trajectory.add('identifier',[False,r'[a-zA-Z_0-9]+'])
trajectory.add('strandlist',[True,'strand',(NRE.NoneOrMore, 'strand')])
trajectory.add('sequence',[True, (NRE.OneOrMore, 'base')])
trajectory.add('structure',[True, (NRE.OneOrMore, 'pairing')])
trajectory.add('pairing',r'[.()+_]')
trajectory.add('base',r'[gcatGCATuU+_]')
trajectory.add('complex_energyline',[False,'static_eline_1','energy','static_eline_2', 'flux' ])
trajectory.add('static_eline_1',r'Energy: \(')
trajectory.add('energy',(NRE.NamedGroup,'float'))
trajectory.add('static_eline_2',r'\) TotalFlux: ')
trajectory.add('flux',(NRE.NamedGroup,'float'))

complexline =  str( trajectory['complex'])
stateline = str( trajectory['state_line'])

